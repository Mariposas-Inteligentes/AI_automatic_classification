"""EJEMPLO_PERCEPTRON.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wmfAbuwdl3Bh_oPSgNIiadkvgJLM_dZr
"""


"""EJEMPLO PERCEPTRON PASO POR PASO"""

import numpy as np

entradas = np.array([[1, 1, 1],
                     [1, 1, -1],
                     [1, -1, 1],
                     [1, -1, -1]])

clases = np.array([1, -1, -1, -1])


"""FUNCION DE ACTIVACIÓN"""

def activacion(pesos, x, b):
    z = pesos * x
    print("y: ", z.sum()+b)
    if z.sum() + b > 0:
         return 1
    else:
        return -1


"""INICIALIZACIÓN"""

pesos = np.array([0.6473185, 0.37817776, 0.33160055])
b = 0.576251061434036
tasa_de_aprendizaje = 0.4
epocas = 4

for epoca in range(epocas):
    error_total = 0
    for i in range(len(entradas)):
       prediccion = activacion(pesos, entradas[i] ,b)
       error = clases[i] - prediccion 
       error_total+= error**2 
       pesos[0]+= tasa_de_aprendizaje * error * entradas[i][0] 
       pesos[1]+= tasa_de_aprendizaje * error * entradas[i][1]
       pesos[2]+= tasa_de_aprendizaje * error * entradas[i][2]
       b = b + tasa_de_aprendizaje * error
       print("iteracion: ", i, "   error iteracion: ", error, "    pesos: ", pesos, "  b: ", b)
    print("Final de la epoca: ", epoca, "  error_total: ", error_total, "\n")